Resources:
  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      # Generate a name based on the stage
      IdentityPoolName: ${self:provider.stage}IdentityPool
      # Don't allow unathenticated users
      AllowUnauthenticatedIdentities: false
      # Link to our User Pool
      CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: [ "CognitoUserPool", "ProviderName" ]
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      # Generate a name based on the stage
      UserPoolName: ${self:provider.stage}-user-pool
      # Set email as an alias
      AliasAttributes:
        - preferred_username
      AutoVerifiedAttributes:
        - email
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      # Generate an app client name based on the stage
      ClientName: ${self:provider.stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH
      GenerateSecret: false
  ServiceRole:
        Type: "AWS::IAM::Role"
        Properties:
          RoleName: "DynamoRole"
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Principal:
                  Service:
                    - "lambda.amazonaws.com"
                Action:
                  - "sts:AssumeRole"
          Policies:
            - PolicyName: "Dynamo-ServiceRole-Policy"
              PolicyDocument:
                Version: "2012-10-17"
                Statement:
                  - Effect: "Allow"
                    Action:
                      - "dynamodb:Query"
                      - "dynamodb:BatchWriteItem"
                      - "dynamodb:GetItem"
                      - "dynamodb:DeleteItem"
                      - "dynamodb:PutItem"
                      - "dynamodb:Scan"
                      - "dynamodb:UpdateItem"
                    Resource:
                      - "arn:aws:dynamodb:us-east-1:*:table/${self:provider.stage}-pictures-table"
  XrayLambdaRolePolicy:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: "xray-policy"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Action:
              - "xray:PutTraceSegments"
              - "xray:PutTelemetryRecords"
            Resource:
              - "*"
      Roles:
        - Ref: ServiceRole
Outputs:
  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool
  UserPoolId:
    Value:
      Ref: CognitoUserPool
    Export:
      Name: "CognitoUserPool::Arn"
  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient