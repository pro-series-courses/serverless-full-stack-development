# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: pro-series-serverless # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "=1.38.0"

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs8.10
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:DeleteObject
        - s3:GetObject
      Resource:
         - Fn::Join:
           - ""
           - 
            - "arn:aws:s3:::"
            - Ref: PicturesBucket
            - "/*"
plugins:
  - serverless-stack-output
  - serverless-finch
  - serverless-single-page-app-plugin
  - serverless-webpack
  - serverless-dynamodb-autoscaling

custom:
  output:
    handler: scripts/config.handler # Same syntax as you already know
  capacities:
    - table: PicturesTable  # DynamoDB Resource
      read:
        minimum: 1        # Minimum read capacity
        maximum: 10     # Maximum read capacity
        usage: 0.75       # Targeted usage percentage
      write:
        minimum: 1       # Minimum write capacity
        maximum: 10      # Maximum write capacity
        usage: 0.5        # Targeted usage percentage
  client:
    bucketName: ${self:provider.stage}-front-end
    distributionFolder: ../build 
    indexDocument: index.html
    errorDocument: index.html
# you can add packaging information here
# package:
#   include:
#      - src/test.jpg
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions: 
    dynamodb-trigger:
      name: trigger
      handler: src/trigger.handler 
      events:
        - stream:
            type: dynamodb
            batchSize: 1
            startingPosition: LATEST
            arn:
              Fn::GetAtt:
                - PicturesTable
                - StreamArn
      environment: 
        PICTURE_BUCKET: ${self:provider.stage}-pictures
    image-analysis:
      name: analysis
      handler: src/image.handler
      events:
        - http:
            path: image/analysis
            method: post     
            cors: true       
      environment: 
        PICTURE_BUCKET: ${self:provider.stage}-pictures
        
# you can add CloudFormation resource templates here
resources:
    - ${file(resources/security.yml)}
    - ${file(resources/data-storage.yml)}
    - ${file(resources/object-storage.yml)}
    - ${file(resources/misc.yml)}
